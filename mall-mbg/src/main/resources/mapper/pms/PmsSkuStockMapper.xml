<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zscat.mallplus.mbg.pms.mapper.PmsSkuStockMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zscat.mallplus.mbg.pms.entity.PmsSkuStock">
        <id column="id" property="id" />
        <result column="product_id" property="productId" />
        <result column="sku_code" property="skuCode" />
        <result column="price" property="price" />
        <result column="stock" property="stock" />
        <result column="low_stock" property="lowStock" />
        <result column="sp1" property="sp1" />
        <result column="sp2" property="sp2" />
        <result column="sp3" property="sp3" />
        <result column="pic" property="pic" />
        <result column="sale" property="sale" />
        <result column="promotion_price" property="promotionPrice" />
        <result column="lock_stock" property="lockStock" />
    </resultMap>

    <resultMap id="pmsSkuStockVoMap" type="com.zscat.mallplus.mbg.pms.vo.PmsSkuStockVo" extends="BaseResultMap">
        <collection property="pmsProductResult" columnPrefix="pms_"
                    resultMap="com.zscat.mallplus.mbg.pms.mapper.PmsProductMapper.updateInfoMap">
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, product_id, sku_code, price, stock, low_stock, sp1, sp2, sp3, pic, sale, promotion_price, lock_stock
    </sql>

    <insert id="replaceList">
        REPLACE INTO pms_sku_stock (id,product_id, sku_code, price, stock, low_stock, sp1, sp2, sp3, pic, sale) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT},
            #{item.productId,jdbcType=BIGINT},
            #{item.skuCode,jdbcType=VARCHAR},
            #{item.price,jdbcType=DECIMAL},
            #{item.stock,jdbcType=INTEGER},
            #{item.lowStock,jdbcType=INTEGER},
            #{item.sp1,jdbcType=VARCHAR},
            #{item.sp2,jdbcType=VARCHAR},
            #{item.sp3,jdbcType=VARCHAR},
            #{item.pic,jdbcType=VARCHAR},
            #{item.sale,jdbcType=INTEGER})
        </foreach>
    </insert>

    <select id="querySkuStockVos" resultMap="pmsSkuStockVoMap">
        SELECT s.id sku_id,s.product_id sku_product_id,s.price sku_price,s.low_stock sku_low_stock,s.pic sku_pic,s.sale
        sku_sale,s.sku_code sku_sku_code,s.sp1 sku_sp1,s.sp2 sku_sp2,s.sp3 sku_sp3,s.stock sku_stock,s.lock_stock sku_lock_stock,
        c.favor_type,p.*,
        pc.parent_id cateParentId,
        l.id ladder_id,l.product_id ladder_product_id,l.discount ladder_discount,l.count ladder_count,l.price
        ladder_price,
        pf.id full_id,pf.product_id full_product_id,pf.full_price full_full_price,pf.reduce_price full_reduce_price,
        m.id member_id,m.product_id member_product_id,m.member_level_id member_member_level_id,m.member_price
        member_member_price,m.member_level_name member_member_level_name,
        a.id attribute_id,a.product_id attribute_product_id,a.product_attribute_id
        attribute_product_attribute_id,a.value attribute_value
        FROM pms_sku_stock s
        LEFT JOIN pms_product p on s.product_id = p.id
        LEFT JOIN pms_product_category pc on pc.id = p.product_category_id
        LEFT JOIN pms_product_ladder l ON p.id = l.product_id
        LEFT JOIN pms_product_full_reduction pf ON pf.product_id=p.id
        LEFT JOIN pms_member_price m ON m.product_id = p.id
        LEFT JOIN ums_collect c ON c.assembly_id=s.id
        LEFT JOIN pms_product_attribute_value a ON a.product_id=p.id
        WHERE s.id = #{skuId}
    </select>
</mapper>
